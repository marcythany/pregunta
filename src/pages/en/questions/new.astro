---
import Layout from '../../../layouts/Layout.astro';
import { UserMenu } from '../../../components/ui/UserMenu';

---

<Layout title="New Question - Pregunta">
  <main class="container mx-auto px-4 py-8">
    <header class="flex justify-between items-center mb-8">
      <h1 class="text-3xl font-bold">New Question</h1>
      <UserMenu client:load />
    </header>

    <form id="questionForm" class="max-w-3xl mx-auto space-y-6">
      <div>
        <label for="title" class="block text-sm font-medium text-gray-700">
          Title
        </label>
        <input
          type="text"
          id="title"
          name="title"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
          placeholder="Enter a clear and specific title"
        />
      </div>

      <div>
        <label for="content" class="block text-sm font-medium text-gray-700">
          Content
        </label>
        <textarea
          id="content"
          name="content"
          rows="8"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
          placeholder="Describe your question in detail..."
        ></textarea>
      </div>

      <div>
        <label for="category" class="block text-sm font-medium text-gray-700">
          Category
        </label>
        <select
          id="category"
          name="category"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
        >
          <option value="">Select a category</option>
          <option value="technology">Technology</option>
          <option value="science">Science</option>
          <option value="history">History</option>
          <option value="geography">Geography</option>
          <option value="arts">Arts</option>
          <option value="sports">Sports</option>
          <option value="entertainment">Entertainment</option>
          <option value="other">Other</option>
        </select>
      </div>

      <div>
        <label for="tags" class="block text-sm font-medium text-gray-700">
          Tags
        </label>
        <input
          type="text"
          id="tags"
          name="tags"
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
          placeholder="Separate tags with commas (e.g., javascript, programming, web)"
        />
      </div>

      <div class="flex justify-end space-x-4">
        <a
          href="/en"
          class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        >
          Cancel
        </a>
        <button
          type="submit"
          class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        >
          Post Question
        </button>
      </div>
    </form>
  </main>
</Layout>

<script>
  import { userStore } from '../../../stores/authStore';

  // Check permissions before allowing submission
  const form = document.querySelector('#questionForm');
  
  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Check if user is authenticated
    if (!userStore.get().isAuthenticated) {
      alert('You need to be logged in to create a question.');
      return;
    }

    // Check if user has enough points
    if (userStore.get().points < 10) {
      alert('You need at least 10 points to create a question.');
      return;
    }

    try {
      const formData = new FormData(form);
      const tagsInput = formData.get('tags');
      const tags = tagsInput ? tagsInput.toString().split(',').map(tag => tag.trim()).filter(Boolean) : [];

      const response = await fetch('/api/questions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('token')}`
        },
        body: JSON.stringify({
          title: formData.get('title'),
          content: formData.get('content'),
          category: formData.get('category'),
          tags
        })
      });

      if (!response.ok) {
        const data = await response.json();
        throw new Error(data.message || 'Error creating question');
      }

      window.location.href = '/en';
    } catch (err) {
      alert(err.message || 'Error creating question');
    }
  });
</script>
