---
import Header from '../components/layout/Header.astro';
import Footer from '../components/layout/Footer.astro';
import { ToastContainer } from '../components/ui/modals/ToastManager.jsx';
import '../styles/global.css';

const lang = Astro.currentLocale || 'pt-br';

interface Props {
  title: string;
  description?: string;
  image?: string;
  type?: string;
}

const { 
  title, 
  description = "Pregunta - O jogo de perguntas e respostas",
  image = "/og-image.png",
  type = "website"
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

---

<html lang={lang} class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link href="https://fonts.googleapis.com/css2?family=Fredoka:wght@300;400;500;600;700&family=Nunito:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO -->
    <title>{title}</title>
    <link rel="canonical" href={canonicalURL} />
    <meta name="robots" content="index, follow" />
    
    <!-- Open Graph -->
    <meta property="og:type" content={type} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.site)} />
    <meta property="og:url" content={canonicalURL} />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(image, Astro.site)} />
    
    <!-- PWA -->
    <meta name="theme-color" content="#4F46E5" />
    <link rel="manifest" href="/manifest.json" />
    <link rel="apple-touch-icon" href="/icon-192x192.png" />
    
    <!-- Theme Script -->
    <script is:inline>
      // Verifica e aplica o tema inicial
      function setInitialTheme() {
        if (
          localStorage.theme === 'dark' ||
          (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
        ) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      }

      // Executa imediatamente para evitar flash
      setInitialTheme();

      // Reaplica quando a página é carregada via View Transitions
      document.addEventListener('astro:after-swap', setInitialTheme);
    </script>
  </head>
  <body class="h-full font-body bg-light-background dark:bg-dark-background text-light-text-primary dark:text-dark-text-primary antialiased">
    <div class="min-h-full flex flex-col">
      <Header />
      
      <div class="flex-grow relative overflow-hidden">
        <!-- Elementos decorativos de fundo -->
        <div class="absolute inset-0 overflow-hidden pointer-events-none">
          <!-- Círculos decorativos -->
          <div class="absolute top-20 left-10 w-64 h-64 bg-accent-yellow/10 dark:bg-accent-purple/10 rounded-full blur-3xl animate-float"></div>
          <div class="absolute bottom-40 right-20 w-96 h-96 bg-accent-orange/10 dark:bg-accent-pink/10 rounded-full blur-3xl animate-float" style="animation-delay: -2s;"></div>
          <div class="absolute top-1/2 left-1/2 w-72 h-72 bg-accent-green/10 dark:bg-accent-yellow/10 rounded-full blur-3xl animate-float" style="animation-delay: -4s;"></div>
        </div>

        <!-- Conteúdo principal -->
        <main class="relative">
          <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <slot />
          </div>
        </main>
      </div>

      <Footer />
      
      <!-- Toast Container -->
      <ToastContainer client:load />
    </div>
  </body>
</html>